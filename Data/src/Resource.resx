<?xml version="1.0" encoding="utf-8"?> 
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0
 
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example: 

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader> 
    <resheader name="version">2.0</resheader> 
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader> 
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64"> 
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64"> 
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value> 
        <comment>This is a comment</comment>
    </data> 

    There are any number of "resheader" rows that contain simple
    name/value pairs. 

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the
    mimetype set. 

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
 
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter 
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64 
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding. 

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    --> 
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"> 
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true"> 
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata"> 
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" /> 
              </xsd:sequence> 
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" /> 
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType> 
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType> 
              <xsd:attribute name="alias" type="xsd:string" /> 
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType> 
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType> 
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" /> 
              </xsd:sequence> 
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" /> 
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType> 
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType> 
              <xsd:sequence> 
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence> 
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element> 
        </xsd:choice>
      </xsd:complexType>
    </xsd:element> 
  </xsd:schema> 
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value> 
  </resheader>
  <resheader name="version">
    <value>2.0</value> 
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value> 
  </resheader> 
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value> 
  </resheader>
  <data name="DataGridDataErrorEventArgs_NullException" xml:space="preserve">
    <value>Cannot throw null exception.</value> 
  </data>
  <data name="DataGridRow_InvalidRowIndexCannotCompleteOperation" xml:space="preserve">
    <value>Invalid row index. Cannot complete operation.</value> 
  </data> 
  <data name="DataGridSelectedItemsCollection_CannotChangeSelectedItemsCollectionInSingleMode" xml:space="preserve">
    <value>Can only change SelectedItems collection in ExtendedFullRow selection mode.  Use SelectedItem property in SingleFullRow selection mode.</value> 
  </data>
  <data name="DataGrid_CannotAddFrozenColumn" xml:space="preserve">
    <value>Cannot add frozen column.</value> 
  </data>
  <data name="DataGrid_CannotAddNonFrozenColumn" xml:space="preserve">
    <value>Cannot add non-frozen column.</value> 
  </data> 
  <data name="DataGrid_CannotChangeColumnCollectionWhileAdjustingDisplayIndexes" xml:space="preserve">
    <value>Cannot change column collection while adjusting display indexes.</value> 
  </data>
  <data name="DataGrid_CannotMoveFrozenColumn" xml:space="preserve">
    <value>Cannot move frozen column.</value> 
  </data>
  <data name="DataGrid_CannotMoveNonFrozenColumn" xml:space="preserve">
    <value>Cannot move non-frozen column.</value> 
  </data> 
  <data name="DataGrid_ColumnCannotBeCollapsed" xml:space="preserve">
    <value>Column cannot be collapsed.</value> 
  </data>
  <data name="DataGrid_ColumnCannotBeReassignedToDifferentDataGrid" xml:space="preserve">
    <value>Column already belongs to a DataGrid instance and cannot be reassigned.</value> 
  </data>
  <data name="DataGrid_ColumnNotInThisDataGrid" xml:space="preserve">
    <value>Provided column does not belong to this DataGrid.</value> 
  </data> 
  <data name="DataGrid_CommitFailedCannotCompleteOperation" xml:space="preserve">
    <value>Commit failed.  Cannot complete operation.</value> 
  </data>
  <data name="DataGrid_InvalidEnumValue" xml:space="preserve">
    <value>The value "{0}" is not a valid "{1}" enumeration value.</value> 
  </data>
  <data name="DataGrid_InvalidRowElement" xml:space="preserve">
    <value>Invalid element, check that the element is contained in a row, and that the row is displayed or selected.</value> 
  </data> 
  <data name="DataGrid_ItemIsNotContainedInTheItemsSource" xml:space="preserve">
    <value>The item is not contained in the ItemsSource.</value> 
  </data>
  <data name="DataGrid_ItemsSourceNullCannotCompleteOperation" xml:space="preserve">
    <value>The ItemsSource is null.  Cannot complete operation.</value> 
  </data>
  <data name="DataGrid_MissingTemplateForType" xml:space="preserve">
    <value>Missing template.  Cannot initialize {0}.</value> 
  </data> 
  <data name="DataGrid_NoCurrentRow" xml:space="preserve">
    <value>There is no current row.  Operation cannot be completed.</value> 
  </data>
  <data name="DataGrid_NoOwningGrid" xml:space="preserve">
    <value>There is no instance of DataGrid assigned to this {0}.  Cannot complete operation.</value> 
  </data>
  <data name="DataGrid_UnderlyingPropertyIsReadOnly" xml:space="preserve">
    <value>Cannot set a column to read/write when the underlying property does not allow it.</value> 
  </data> 
  <data name="DataGrid_ValueCannotBeSetToNull" xml:space="preserve">
    <value>{0} cannot be set to a null value.</value> 
  </data>
  <data name="DataGrid_ValueIsNotAnInstanceOf" xml:space="preserve">
    <value>The value is not an instance of {0}.</value> 
  </data>
  <data name="DataGrid_ValueIsNotAnInstanceOfEitherOr" xml:space="preserve">
    <value>The value is not an instance of {0} or {1}.</value> 
  </data> 
  <data name="DataGrid_ValueIsReadOnly" xml:space="preserve">
    <value>{0} is a read-only value and cannot be reassigned.</value> 
  </data>
  <data name="DataGrid_ValueMustBeGreaterThan" xml:space="preserve">
    <value>{0} must be greater than {1}.</value> 
  </data>
  <data name="DataGrid_ValueMustBeGreaterThanOrEqualTo" xml:space="preserve">
    <value>{0} must be greater than or equal to {1}.</value> 
  </data> 
  <data name="DataGrid_ValueMustBeGTandLT" xml:space="preserve">
    <value>{0} must be greater than {1} and less than {2}.</value> 
  </data>
  <data name="DataGrid_ValueMustBeGTandLTE" xml:space="preserve">
    <value>{0} must be greater than {1} and less than or equal to {2}.</value> 
  </data>
  <data name="DataGrid_ValueMustBeGTEandLT" xml:space="preserve">
    <value>{0} must be greater than or equal to {1} and less than {2}.</value> 
  </data> 
  <data name="DataGrid_ValueMustBeGTEandLTE" xml:space="preserve">
    <value>{0} must be greater than or equal to {1} and less than or equal to {2}.</value> 
  </data>
  <data name="DataGrid_ValueMustBeLessThan" xml:space="preserve">
    <value>{0} must be less than {1}.</value> 
  </data>
  <data name="DataGrid_ValueMustBeLessThanOrEqualTo" xml:space="preserve">
    <value>{0} must be less than or equal to {1}.</value> 
  </data> 
</root>
